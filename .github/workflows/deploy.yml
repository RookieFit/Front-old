name: Deploy Frontend To EC2

on:
  push:
    branches:
      - feat]#135-Deployment-Workflow

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js 설치
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 3. 종속성 설치
      - name: Install dependencies
        run: npm install
        working-directory: ./rookiefit

      # 4. React 빌드
      - name: Build frontend
        run: npm run dev
        working-directory: ./rookiefit

      # 5. AWS credentials 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 6. ECR에 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2  

      # 7. Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t rookiefit-frontend ./rookiefit

      # 8. Docker 이미지 태깅
      - name: Tag Docker image
        run: docker tag rookiefit-frontend:latest ${{ steps.login-ecr.outputs.registry }}/rookiefit-frontend:latest

      # 9. Docker 이미지 ECR에 푸시
      - name: Push Docker image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/rookiefit-frontend:latest

      # 10. EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop rookiefit-frontend || true
            docker rm rookiefit-frontend || true
            docker pull ${{ steps.login-ecr.outputs.registry }}/rookiefit-frontend:latest
            docker run -d --name rookiefit-frontend -p 4040:4040 ${{ steps.login-ecr.outputs.registry }}/rookiefit-frontend:latest
